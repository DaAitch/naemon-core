next - unreleased
=================
 * ...

1.0.4 - Jun 03 2016
===================
Features:
  * Downtimes can now be scheduled to start before their time of their scheduling
  * Naemon can now start without any configured objects
  * Add new NEB callback API version with better support for communicating cancellation and override reasons
  * Naemon now consistently logs when a notification is suppressed, along with
    the reason why (very useful for troubleshooting notification issues!). This
    feature is enabled by default, and can be overridden by setting
    enable_notification_suppression_reason_logging=0 in naemon.cfg.
  * Scheduling logic completely overhauled to not depend on wallclock time,
    which makes it much more reliable (no more lost or orphaned events!)
  * It is now possible to disable status data updates completely
    (status_update_interval=0)
  * GLib messages are now logged to the regular outputs.

Bugfixes:
  * Fix segfault which would happen when a plugin's output is one or more
    newlines only
  * Shadownaemon: fix segfault if plugin output contains csv separator
  * Fix an ancient bug where reconstructing a downtime from retention data
    would result in double downtime alerts being emitted
  * Fix another ancient race condition where a rapidly reload and starting
    naemon would leave you with two instances running
  * Stop logging if check_result_path (deprecated) is not available even
    if it's set
  * Strings in retention data are now properly escaped, fixing various bugs
  * Various init script fixes
  * Fix a race condition that would sometimes lead to complete deadlock
  * Fix a bug where Naemon would allow duplicate objects to be created
  * Replace in-tree (ha-ha) rbtree with GLib's GTree, to get rid of incorrect
    node removal behaviour in the former
  * Fix a race condition that would sometimes occur during a reload
  * Fix a bug in signal handling code which would sometimes cause the command
    file worker to become defunct
  * Fix a bug where the specified retry_interval of a service or host
    would not be properly respected, and the check_interval would be used instead
  * Fix a potential crash (segfault) when freeing parent/child references
  * Fix a bug where "stale" objects would only have one freshness check executed
  * Fix improper handling of CHECK_OPTION_FORCE_EXECUTION, which would lead to
    checks not being run, despite being forcibly scheduled
  * Fix a bug where Naemon wouldn't properly initialize its lock file, but
    start regardless

Other:
  * Grafted Nagios git history onto Naemon's for easier code archeology
  * Lots of code cleanup, typo fixes, new test cases, new assertions &
    error handling, fixed memory leaks, logging and refactoring
  * Removed an undocumented, experimental, untested "load control" feature
  * Decoupled Thruk packages, we now use the official upstream Thruk packages


1.0.3 - Mar 29 2015
===================
 * shadownaemon: fix request counter

1.0.2 - Mar 28 2015
=================
 * shadownaemon: remove external commands from shadownaemon (#104)
 * shadownaemon: propagate last_hard_* values (Michael Kraus)

1.0 - Feb 13 2015
=================
 * Fix shadownaemon comment and downtime syncronization
 * Fix spelling errors

0.9 - Jan 08 2015
=================
 * livestatus module name change to livestatus.so, path changed to libdir/naemon/naemon-livestatus/livestatus.so
 * External commands are now validated
 * Query handler supports commands now
 * Added shadownaemon tool to locally shadow a remote core via livestatus
 * Naemon now starts after reboot on Debian

0.8 - Feb 13 2014
=================
 * Based on nagios 4.0.2
 * Rename a lot of things, replace build system, etc.
 * The CGIs are gone - use Thruk instead.
 * Remove the upstream version check - use your package manager instead.
 * New NEB callback, NEBATTR_CHECK_ALERT, when a check generates an alert.
 * Allow contactgroups without members but having contactgroup_members.
 * No longer spam Naemon log when checks time out.
 * All positive values for ACKNOWLEDGE_{HOST,CHECK} means TRUE.
 * Check output parsing rewritten.
   - Fixes crashes, bugs, and improves performance.
 * Log rotation is done by logrotate instead of in-core log rotation.
 * Fix misc crashes, speed up misc areas, and other bug fixes.
